// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SISONKE_Invoicing_RESTAPI.AuthModels;

#nullable disable

namespace SISONKE_Invoicing_RESTAPI.Migrations
{
    [DbContext(typeof(AuthenticationContext))]
    [Migration("20240612175053_initialAuthDBCreate")]
    partial class initialAuthDBCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7df19f08-19a3-46fe-a902-d865a0dd8a33",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "12c368f6-813e-405b-8491-f136055968bf",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        },
                        new
                        {
                            Id = "d9c533e4-ab78-4336-9304-55838cc8bb29",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "65891127-c413-4801-aa16-498245cc944c",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "3b19e2bf-c46a-4763-ae42-d172bc40040a",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "7e22efcf-5f89-47d1-aaaf-0e8fd251c13a",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "469cb03e-60af-4902-bbb3-729ac89eec36",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "e29021ec-2930-42e3-8e70-6869b5163e16",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "ac5b10e4-fe27-42d5-8ac5-81c3eb3b2fb4",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "832671a4-b958-4500-9933-21508a9a9722",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "17902040-2c5c-4577-9028-775f96cb0c18",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "8004e687-9851-4912-b5c3-123c842d95b4",
                            RoleId = "7df19f08-19a3-46fe-a902-d865a0dd8a33"
                        },
                        new
                        {
                            UserId = "f10e8fbe-21d1-484e-b68d-d3a8669525c6",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "4bc919ea-e389-40d3-8871-2dc18176688a",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "1619013e-539a-49a7-8eea-9720de11e11c",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "fab4a8ed-08d5-4180-a56c-8814f39ccec8",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "5ee05b06-3a4f-45cd-a10a-9192dc4c44f9",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "a74790f6-4d41-4015-a56d-186c82f85d1e",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "e66500b8-6d77-4934-9a0d-319aa7d63138",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "ef9769db-1425-47a4-bd9a-6fb2a34b81bd",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "dbce6a3a-0249-4b1a-9072-e6a56a359a19",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "7bf00129-f294-450f-9cdd-3f34a45117c2",
                            RoleId = "12c368f6-813e-405b-8491-f136055968bf"
                        },
                        new
                        {
                            UserId = "a4729d4c-efa6-47c6-8dff-70bfe516f6ce",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "faf95f6d-9d75-4f52-b2f1-51ce2f41b6df",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "8639092a-33d4-43b2-a621-cf6239a1e665",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "846d87b3-a553-4eb7-bfbc-6941c562c402",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "eb647f73-c7a9-4994-8fc0-e46a6c4d7e0b",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "d82b8577-befc-469a-bd2d-f122b5b5badd",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "799eabc0-0f76-4c49-97bb-8489fe009bdd",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "8a1c3018-9743-4cdc-86b8-39e86f240b42",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "0b4fbee5-66b9-4362-bc07-14050eee108f",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        },
                        new
                        {
                            UserId = "65ff9d7e-ae39-4a2a-9019-247334ae953a",
                            RoleId = "d9c533e4-ab78-4336-9304-55838cc8bb29"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SISONKE_Invoicing_RESTAPI.AuthModels.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.HasDiscriminator().HasValue("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = "65891127-c413-4801-aa16-498245cc944c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cfb249ec-af4b-4796-a21a-2776c09f931e",
                            Email = "Zzimela@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "ZZIMELAADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEJzNDsV+MKXou79djTV4NA0yafwFC1hogZdwB/WyLmrm6ISkioaFCcmoCcg8DpXUEw==",
                            PhoneNumber = "0743244345",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "08de0d83-94ae-47db-bfe0-2db0d9ef69e5",
                            TwoFactorEnabled = false,
                            UserName = "ZzimelaAdmin",
                            Address = "18 Jack avenue, 2001",
                            FirstName = "Zandile",
                            LastName = "Zimela"
                        },
                        new
                        {
                            Id = "3b19e2bf-c46a-4763-ae42-d172bc40040a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "03994cd5-dc88-49e6-85d6-8f3dcec40169",
                            Email = "Harrionj01@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "HARRISON01ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECMUz7kg6TjbS3tv/FIko2yZENvhB+jerfaHQiGrCxf5lxMH/QcFX6rsMablj4oC/A==",
                            PhoneNumber = "0675647385",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9867d518-d6b1-4d58-a449-1653550b491b",
                            TwoFactorEnabled = false,
                            UserName = "Harrison01Admin",
                            Address = "230 West street, 4001",
                            FirstName = "Jack",
                            LastName = "Harrison"
                        },
                        new
                        {
                            Id = "7e22efcf-5f89-47d1-aaaf-0e8fd251c13a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "362a778b-2da8-495d-af3a-b047b9dad9c6",
                            Email = "Sanchoh@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "SANCHOHADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEK/ULLx509gvjVJsARYr6bRcWePnF2TX6dVTLQzYBmyYsB1A1rwS5AEvcbRAYUW1eQ==",
                            PhoneNumber = "0673004545",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b6581fcc-db9c-4ae2-b223-1fdf874af96c",
                            TwoFactorEnabled = false,
                            UserName = "SanchohAdmin",
                            Address = "15 Zimbali avenue, 4501",
                            FirstName = "Hannah",
                            LastName = "Sancho"
                        },
                        new
                        {
                            Id = "469cb03e-60af-4902-bbb3-729ac89eec36",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "350efc73-a786-4310-847a-3b05ad3ba393",
                            Email = "Wakez007@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "WAKEZ007ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAELH/US7395eGWxdyl8GfpERXm4ZYiTA1IeDK7QI0P8yL90FQh7zVaMV1BARvTOhWWA==",
                            PhoneNumber = "0745667386",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "134e9694-fd44-4abc-9a3a-f6f9b6221ae8",
                            TwoFactorEnabled = false,
                            UserName = "Wakez007Admin",
                            Address = "28 Sandton avenue, 2001",
                            FirstName = "Zack",
                            LastName = "Wake"
                        },
                        new
                        {
                            Id = "e29021ec-2930-42e3-8e70-6869b5163e16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "736f469e-be1a-492a-a42c-a86c28dbd9fc",
                            Email = "Bruno22@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "BRUNOS22ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAENzf168kC+IhW3yqEljg9saLCENV3UMpp1r8H5U6mMSniLHYzDvH3FgMQsXS4xEXtQ==",
                            PhoneNumber = "0843778347",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f5feb652-2ac1-4ade-943f-4437837d852f",
                            TwoFactorEnabled = false,
                            UserName = "Brunos22Admin",
                            Address = "20 King Edwards avenue, 3201",
                            FirstName = "Bruno",
                            LastName = "Sterling"
                        },
                        new
                        {
                            Id = "ac5b10e4-fe27-42d5-8ac5-81c3eb3b2fb4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9e245d54-657e-451f-9a92-8b76271e4208",
                            Email = "Luisd7@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "LUIS7ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAELwuibpBeQePTM4c7UEf+VCRn/GaGw9AhzPJmIOXsKicfpyQ1qz7JxbtI++dh/FQeQ==",
                            PhoneNumber = "0742687829",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e1be7e7b-23f3-49bd-a81e-50985be0ef71",
                            TwoFactorEnabled = false,
                            UserName = "Luis7Admin",
                            Address = "19 Jack avenue, 2001",
                            FirstName = "Luis",
                            LastName = "Diaz"
                        },
                        new
                        {
                            Id = "832671a4-b958-4500-9933-21508a9a9722",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "be02ae79-d5b3-4a99-b405-bc4d4ce35d06",
                            Email = "Walkerc07@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "WALKERC07ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBBXgfXVj6jDqM0P75X/hE1ZL9nUrSobl6nnu4NaBR8h7iX4+nCM4Vxfc2t53PpIBg==",
                            PhoneNumber = "0743264748",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dca7dce0-28e3-40f5-99c2-74bce6ec4614",
                            TwoFactorEnabled = false,
                            UserName = "Walkerc07Admin",
                            Address = "15 Harrison avenue, 3001",
                            FirstName = "Cristiano",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = "17902040-2c5c-4577-9028-775f96cb0c18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "58adfb48-b8de-4719-be6d-01f8502a8cb8",
                            Email = "Fodenp47@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "FODENP47ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEB+9apa2Dq04effzrTpZD/zEinE5ST3zjeXkiXJ+pycJr7iZTV1/G9BWwtNq9cdDJg==",
                            PhoneNumber = "0746277885",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7550995-7bb2-4211-be85-9f45aaed34f0",
                            TwoFactorEnabled = false,
                            UserName = "Fodenp47Admin",
                            Address = "100 Everton street, 6001",
                            FirstName = "Phil",
                            LastName = "Foden"
                        },
                        new
                        {
                            Id = "8004e687-9851-4912-b5c3-123c842d95b4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a4b7c99-ec31-4a79-8e16-b1c00462e97f",
                            Email = "Kcarrick@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "KCARRICKADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEOsCO9OnMVpNEEl5MFdzbQcgrluWZmY1B7hhJOY+bdINgeDhQI7etSnVCgYJ4KsJDg==",
                            PhoneNumber = "0675249849",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44b1d249-6871-4522-8a60-56206a50bb15",
                            TwoFactorEnabled = false,
                            UserName = "KcarrickAdmin",
                            Address = "20 Jack avenue, 2001",
                            FirstName = "Kylian",
                            LastName = "Carrick"
                        },
                        new
                        {
                            Id = "f10e8fbe-21d1-484e-b68d-d3a8669525c6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4a0cb380-5c68-4e4c-97f0-1ad364601174",
                            Email = "Jkhalid@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "JKHALID",
                            PasswordHash = "AQAAAAEAACcQAAAAEB6n/+hqeQ7ApuqaPW9Jm6NV7t1+FarrT9VjrUWsn8QQcuWWDN7ZSGB/YYZq4DWdpQ==",
                            PhoneNumber = "074396748",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9c4b999f-250c-488f-a18d-d7c48cc4e7f1",
                            TwoFactorEnabled = false,
                            UserName = "Jkhalid",
                            Address = "25 Zuma avenue, 2001",
                            FirstName = "Jordan",
                            LastName = "Khalid"
                        },
                        new
                        {
                            Id = "4bc919ea-e389-40d3-8871-2dc18176688a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b77519b3-2521-49fb-9d00-b7ace86fcb3a",
                            Email = "ecantopher0@biblegateway.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "ECANTOPHER0",
                            PasswordHash = "AQAAAAEAACcQAAAAECbooVspU/mZ3MFfEUZ+L87eu48zRatmuecBbEY78tOgUtaFRenyjxo7FJYytGE6mQ==",
                            PhoneNumber = "0896572674",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "87179c44-5f73-40b7-8416-02a033995694",
                            TwoFactorEnabled = false,
                            UserName = "ecantopher0",
                            Address = "8 Merchant Point",
                            FirstName = "Elga",
                            LastName = "Cantopher"
                        },
                        new
                        {
                            Id = "1619013e-539a-49a7-8eea-9720de11e11c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a3487c28-4927-45cf-93eb-d7016f0e3b10",
                            Email = "gturpin1@si.edu",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "GTURPIN1",
                            PasswordHash = "AQAAAAEAACcQAAAAEPC1MBn5Ww3jQLi8noX9y7s+HUGIYa9kBU0EE0BR6rTJjyNGbskMxaZD8E18D02omw==",
                            PhoneNumber = "0969508155",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "575487c7-243b-4bf7-8c9a-d7f46d48080d",
                            TwoFactorEnabled = false,
                            UserName = "gturpin1",
                            Address = "24 Amoth Street",
                            FirstName = "Gasparo",
                            LastName = "Turpin"
                        },
                        new
                        {
                            Id = "fab4a8ed-08d5-4180-a56c-8814f39ccec8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "64c3f692-c3cd-4dad-8b25-c3545c316133",
                            Email = "hvenny2@hao123.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "HVENNY2",
                            PasswordHash = "AQAAAAEAACcQAAAAEMSmZDaNHolkEJfClQwHuMVlbAwqfXsggKZaezG9IQUjTAGPLx+dnyvNJ8VXNfAt3g==",
                            PhoneNumber = "0969508155",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "93b59212-fdbb-48f9-8a97-0bc06f796409",
                            TwoFactorEnabled = false,
                            UserName = "hvenny2",
                            Address = "290571 Sunbrook Alley",
                            FirstName = "Harlin",
                            LastName = "Venny"
                        },
                        new
                        {
                            Id = "5ee05b06-3a4f-45cd-a10a-9192dc4c44f9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c24efb1c-56fa-4a42-990c-3eb34734364e",
                            Email = "rmaiden3@vimeo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "RMAIDEN3",
                            PasswordHash = "AQAAAAEAACcQAAAAELO1ggXoHYtFf69X17aacZCUqLX76WUZMuuRtJAVl5oH9RFLlizvW5Z+QGysNlS0zw==",
                            PhoneNumber = "0101459782",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "202412a0-580a-4657-9e06-118164570912",
                            TwoFactorEnabled = false,
                            UserName = "rmaiden3",
                            Address = "207 Delladonna Drive",
                            FirstName = "Roshelle",
                            LastName = "Maiden"
                        },
                        new
                        {
                            Id = "a74790f6-4d41-4015-a56d-186c82f85d1e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6aeefe4-b367-41c8-945b-1250807d65c2",
                            Email = "kabatelli4@canalblog.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "KABATELLI4",
                            PasswordHash = "AQAAAAEAACcQAAAAEL3Kg07b+A+xi+nIGUM4cIU+P4Voi+uorncs6guUgtJ8s8zzvNJ5Cg1dQupdGoKKqw==",
                            PhoneNumber = "0977259204",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9a382467-6e93-4bb8-b5cd-f3646f1253e0",
                            TwoFactorEnabled = false,
                            UserName = "kabatelli4",
                            Address = "14 Mayer Junction",
                            FirstName = "Kesley",
                            LastName = "Abatelli"
                        },
                        new
                        {
                            Id = "e66500b8-6d77-4934-9a0d-319aa7d63138",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08b0ffe6-33ad-43a2-802d-5834ade3a268",
                            Email = "mbucky5@house.gov",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "MBUCKY5",
                            PasswordHash = "AQAAAAEAACcQAAAAEAvnxLEZT3a9kb3YNuWZ7XZnFgtpr+ObjktYteDE/FBm06YceB804Jxx4Fhd7dZKTA==",
                            PhoneNumber = "0977259204",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8e8e3940-f733-44d8-b6d3-24e5a59b0e73",
                            TwoFactorEnabled = false,
                            UserName = "mbucky5",
                            Address = "06 Paget Crossing",
                            FirstName = "Merridie",
                            LastName = "Bucky"
                        },
                        new
                        {
                            Id = "ef9769db-1425-47a4-bd9a-6fb2a34b81bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5882b23d-32c5-4b14-90b7-8711893b38e3",
                            Email = "lpurdom6@kickstarter.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "LPURDOM6",
                            PasswordHash = "AQAAAAEAACcQAAAAEAbiEDsbv4r95wKF7buEVhsMTmE9tx8p7mam/ors7OVOx3Aqw/3Ayp7Ubdx2cw+xJA==",
                            PhoneNumber = "0669797870",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "57c875bd-4009-4ff7-9293-d1f2b108f945",
                            TwoFactorEnabled = false,
                            UserName = "lpurdom6",
                            Address = "0 Prairieview Point",
                            FirstName = "Lawry",
                            LastName = "Purdom"
                        },
                        new
                        {
                            Id = "dbce6a3a-0249-4b1a-9072-e6a56a359a19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "906f0762-1864-4e7b-8801-ee37f7cc1681",
                            Email = "bchavrin7@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "BCHAVRIN7",
                            PasswordHash = "AQAAAAEAACcQAAAAEGBTegu32KvAAZotJOwLJ+Kq3Hgf0vISmBDIc7Rk7fIqqZTDM1XjCQye+LSgMuPHAg==",
                            PhoneNumber = "0059209719",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "726fd921-b4dc-4cd0-b4bd-290c19359db3",
                            TwoFactorEnabled = false,
                            UserName = "bchavrin7",
                            Address = "35347 Eliot Place",
                            FirstName = "Bekki",
                            LastName = "Chavrin"
                        },
                        new
                        {
                            Id = "7bf00129-f294-450f-9cdd-3f34a45117c2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eaad9fce-bc1d-4b2b-ae8f-d4805b274ecd",
                            Email = "olittley8@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "OLITTLEY8",
                            PasswordHash = "AQAAAAEAACcQAAAAEHle3b0Eqkw1deClWTJgIsfS6wbd2qUFrDaqRSu/6BJhRnHQCw4RhXUert3mZFS0jA==",
                            PhoneNumber = "2684070285",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eb67f48d-8c42-4116-9e0a-dc652eff8d68",
                            TwoFactorEnabled = false,
                            UserName = "olittley8",
                            Address = "5268 Division Parkway",
                            FirstName = "Orazio",
                            LastName = "Littley"
                        },
                        new
                        {
                            Id = "a4729d4c-efa6-47c6-8dff-70bfe516f6ce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29e54802-4b93-4c6b-8f95-96cd1c85a4e7",
                            Email = "Efronz@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "EFRONZ",
                            PasswordHash = "AQAAAAEAACcQAAAAEH+ockmwVAauowaOgEmTvjD/nKnJv+P7oqbjfF5if4w6SxGxvcwFhwzLhHPI/O9Fwg==",
                            PhoneNumber = "074396748",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7f023ab-b1c6-42ee-96f2-e43ce7ee48a2",
                            TwoFactorEnabled = false,
                            UserName = "Efronz",
                            Address = "15 Zuma avenue, 2001",
                            FirstName = "Zack",
                            LastName = "Efron"
                        },
                        new
                        {
                            Id = "faf95f6d-9d75-4f52-b2f1-51ce2f41b6df",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7009ad1a-8ddd-40be-8d23-c3030c5a3de9",
                            Email = "kmaybey0@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "KMAYBEY0",
                            PasswordHash = "AQAAAAEAACcQAAAAEPO4epHpEQhOsWzIPeGBHuxEAaBLizUC6IvWwfUph49ly8lPAX0IBvAE1ITrvNmPOA==",
                            PhoneNumber = "368-346-0788",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8acba5f4-1132-46be-a022-ffe7f03105ce",
                            TwoFactorEnabled = false,
                            UserName = "kmaybey0",
                            Address = "22310 Schmedeman Parkway",
                            FirstName = "Katharyn",
                            LastName = "Maybey"
                        },
                        new
                        {
                            Id = "8639092a-33d4-43b2-a621-cf6239a1e665",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "259674a1-f2eb-4dd6-8b81-49bea581370f",
                            Email = "lmeasom1@networkadvertising.org",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "LMEASOM1",
                            PasswordHash = "AQAAAAEAACcQAAAAEFIzjCogGLF0uOyUPWTUM/IYTrob24OiyLDwMN3rd5Cw3EpLN0GLN9eFbmgM61ItMQ==",
                            PhoneNumber = "991-219-0321",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e095e110-3abb-4d18-9ff6-6f3032215afa",
                            TwoFactorEnabled = false,
                            UserName = "lmeasom1",
                            Address = "6 Kim Place",
                            FirstName = "Lanni",
                            LastName = "Measom"
                        },
                        new
                        {
                            Id = "846d87b3-a553-4eb7-bfbc-6941c562c402",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad35737a-b053-4fe3-8c08-9e20690fbe8e",
                            Email = "mwoolaston2@soup.io",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "MWOOLASTON2",
                            PasswordHash = "AQAAAAEAACcQAAAAEGucY5dvQlfGEbGZlm1+/2lSKaIbfn8UVNRVqreBk4ZiQpFdDpTvhpT8SpM6B4gClg==",
                            PhoneNumber = "404-725-6084",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d51de964-294f-4a77-ac84-ffb0d14aa135",
                            TwoFactorEnabled = false,
                            UserName = "mwoolaston2",
                            Address = "8 Saint Paul Pass",
                            FirstName = "Laying",
                            LastName = "Woolaston"
                        },
                        new
                        {
                            Id = "eb647f73-c7a9-4994-8fc0-e46a6c4d7e0b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0dbf3036-a82a-4dcf-8511-98eb99c2d1cf",
                            Email = "lhamby3@a8.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "LHAMBY3",
                            PasswordHash = "AQAAAAEAACcQAAAAELK0MiOCBvD1+ouEiJ7EI2HOV5AIdNJXciLPNI4Dz2lZdbXPZRDHEbYq1b3VVHYt7g==",
                            PhoneNumber = "879-880-7372",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2054a043-98d4-412f-a06d-e7eb5f802dc6",
                            TwoFactorEnabled = false,
                            UserName = "lhamby3",
                            Address = "09060 Hanover Trail",
                            FirstName = "Linda",
                            LastName = "Hamby"
                        },
                        new
                        {
                            Id = "d82b8577-befc-469a-bd2d-f122b5b5badd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "063f572c-dcea-4e2e-85aa-0696a363cc5c",
                            Email = "ebartaloni4@intel.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "EBARTALONI4",
                            PasswordHash = "AQAAAAEAACcQAAAAENJV0HCpl0X6+WfbbmaUtewrofFGkTOijLv9tP3WBl/pvOpa1jR3SvwI4JvPdfyYpQ==",
                            PhoneNumber = "799-505-6110",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7b361bf0-3fa1-4343-824e-4db8c394e886",
                            TwoFactorEnabled = false,
                            UserName = "ebartaloni4",
                            Address = "0 Garrison Crossing",
                            FirstName = "Ernesto",
                            LastName = "Bartaloni"
                        },
                        new
                        {
                            Id = "799eabc0-0f76-4c49-97bb-8489fe009bdd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "961a4496-a826-418e-ba2c-b465c81d31f9",
                            Email = "tmacginney5@goodreads.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "TMACGINNEY5",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ3tOQd8sMwQuysrC2y1jF6FBHSf/3RwW9l4bB+e7qoivhiWeHlInqLflSi3yqRABw==",
                            PhoneNumber = "122-564-5165",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8eef8ae2-025a-4d9a-a940-f87de1e027c9",
                            TwoFactorEnabled = false,
                            UserName = "tmacginney5",
                            Address = "36383 Hallows Place",
                            FirstName = "Tarra",
                            LastName = "MacGinney"
                        },
                        new
                        {
                            Id = "8a1c3018-9743-4cdc-86b8-39e86f240b42",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bac302a3-bbd1-49b5-baca-e9b19a9c062f",
                            Email = "crhodef6@shutterfly.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "CRHODEF6",
                            PasswordHash = "AQAAAAEAACcQAAAAEH4YtTLl3Gu9wWx38lR80GbggJ5D4JzyBGoYDiTXNGzk1S4xDXWB4YlhYqALZOyf9Q==",
                            PhoneNumber = "640-914-6862",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e21b30ab-44d5-47b9-b584-61cf7c35c572",
                            TwoFactorEnabled = false,
                            UserName = "crhodef6",
                            Address = "0148 Little Fleur Hill",
                            FirstName = "Cacilia",
                            LastName = "Rhodef"
                        },
                        new
                        {
                            Id = "0b4fbee5-66b9-4362-bc07-14050eee108f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a18efd63-dba4-4ea6-b681-7ea8324cca5e",
                            Email = "kivashkin7@salon.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "KIVASHKIN7",
                            PasswordHash = "AQAAAAEAACcQAAAAEPH4N54IJQUsx+nldKfMEPgh6FIEb7uO+MFP90REihOdzkXGgWuLJIqVX+GfwLVriw==",
                            PhoneNumber = "733-331-0434",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1227b9b9-eccc-4571-af40-fbdb8b357772",
                            TwoFactorEnabled = false,
                            UserName = "kivashkin7",
                            Address = "3113 Clyde Gallagher Crossing",
                            FirstName = "Kerr",
                            LastName = "Ivashkin"
                        },
                        new
                        {
                            Id = "65ff9d7e-ae39-4a2a-9019-247334ae953a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "58584bf0-5b12-42de-9684-b1ddb6f376fb",
                            Email = "eguinnane8@discovery.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "EGUINNANE8",
                            PasswordHash = "AQAAAAEAACcQAAAAEGmFdrH5SQepwKnAJJZjbWhfRa19B1HJBeEPaqYxvIRrHxjcHx3EYqSvrXWP8Q/tKw==",
                            PhoneNumber = "656-188-2034",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d352ca7-edb5-4226-b35c-1b1b5b5b01f5",
                            TwoFactorEnabled = false,
                            UserName = "eguinnane8",
                            Address = "656 Menomonie Hill",
                            FirstName = "Emelda",
                            LastName = "Guinnane"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
